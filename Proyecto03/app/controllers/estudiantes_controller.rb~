# -*- coding: utf-8 -*-
class EstudiantesController < ApplicationController
  
  before_action :es_un_usuario, only: [:index, :edit, :update, :destroy, :show]
  before_action :es_el_usuario, only: [:edit, :update]
  before_action :es_admin, only: [:destroy, :estadisticas] 
  
  def show
    @estudiante = Estudiante.find(params[:id])
  end

  def create
    @estudiante = Estudiante.new(estudiante_params)
    @estudiante.update_attribute(:correo, @estudiante.correo+"@ciencias.unam.mx")
    if @estudiante.save_with_captcha
      # @estudiante.enviar_correo_activacion
      flash.now[:info] = "Por favor, revisa tu correo para activar tu cuenta."
      render 'new'
    else
      render 'new'
    end
  end
  
  def new
    @estudiante = Estudiante.new
  end
  
  def edit
    @estudiante = Estudiante.find(params[:id])
  end

  def update
    @estudiante = Estudiante.find(params[:id])
    if @estudiante.update_attributes(estudiante_params)
      flash[:succes] = "Perfil actualizado"
      redirect_to @estudiante
    else
      render 'edit'
    end
  end
  
  def es_el_usuario
    @estudiante = Estudiante.find(params[:id])
    redirect_to(root_url) unless @estudiante == estudiante_actual
  end

  def es_un_usuario
    unless conectado?
      flash[:danger] = "Favor de iniciar sesiÃ³n"
      redirect_to login_url
    end
  end

  def index
    if conectado? && estudiante_actual.activado
      if params[:search]
        @estudiantes = Estudiante.search(params[:search]).paginate(page: params[:page])
      else
        @estudiantes = Estudiante.paginate(page: params[:page])
      end
    end
  end

  def ayudante_nuevo
    @maestro = Maestro.find(params[:maestro_id])
    if params[:search_ayudante]
      @estudiantes = Estudiante.search(params[:search_ayudante]).paginate(page: params[:page])
    else      
      @estudiantes = Estudiante.paginate(page: params[:page])
    end
  end

  def destroy
    Estudiante.find(params[:id]).destroy
    flash[:succes] = "Estudiante eliminado"
    redirect_to estudiantes_url
  end

  def activar
    update_attribute(:activado, true)
    update_attribute(:activado_a, Time.zone.now)
  end

  def enviar_correo_activacion
    EstudianteMailer.cuenta_activacion(self).deliver_now
  end

  def estadisticas
    @estudiante = Estudiante.find(params[:estudiantes_id])
    @comentarios = (Comentario.where("warning = ?", true)).paginate(page: params[:page], per_page: 4)
    @maestros = (Maestro.where("aprobado = ?", false)).paginate(page: params[:page], per_page: 8)
    @ayudantes = (Ayudantia.where("peticion_eliminar = ?", true)).paginate(page: params[:page], per_page: 10)
    @no_activados = (Maestro.where("correo_enviado = ?", false)).paginate(page: params[:page], per_page: 8)
  end

  private
  
  def estudiante_params
    params.require(:estudiante).permit(:nombre, :correo, :password,
                                 :password_confirmation, :captcha, :captcha_key)
  end

  def es_admin
    redirect_to(root_url) unless estudiante_actual.admin?
  end
end
